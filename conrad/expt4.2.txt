section .data
    msg1 db 'Enter first number: '
    msg1Len equ $-msg1
    msg2 db 'Enter second number: '
    msg2Len equ $-msg2
    msg3 db 'Enter third number: '
    msg3Len equ $-msg3
    resultMsg db 'Largest number is: '
    resultMsgLen equ $-resultMsg
    newline db 10
    
section .bss
    num1 resb 2
    num2 resb 2
    num3 resb 2
    largest resb 2

section .text
    global _start

%macro print 2
    mov eax, 4
    mov ebx, 1
    mov ecx, %1
    mov edx, %2
    int 80h
%endmacro

%macro read 2
    mov eax, 3
    mov ebx, 0
    mov ecx, %1
    mov edx, %2
    int 80h
%endmacro

_start:
    print msg1, msg1Len
    read num1, 2
    
    print msg2, msg2Len
    read num2, 2
    
    print msg3, msg3Len
    read num3, 2
    
    mov al, [num1]   
    sub al, '0'
    mov bl, [num2]  
    sub bl, '0'
    mov cl, [num3]   
    sub cl, '0'
    
    cmp al, bl
    jg check_third   
    mov al, bl      
    
check_third:
    cmp al, cl
    jg store_result  
    mov al, cl     
    
store_result:
    add al, '0'
    mov [largest], al
    
    print resultMsg, resultMsgLen
    
    print largest, 1
    
    print newline, 1
    
    mov eax, 1
    mov ebx, 0
    int 80h