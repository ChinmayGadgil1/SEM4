section .data
    msg1 db "Enter a number: ", 0
    len1 equ $ - msg1
    result_msg db "Factorial: ", 0
    len_result equ $ - result_msg
    newline db 0xA
    space db " "

section .bss
    num resb 2
    factorial resd 1
    buffer resb 10  ; Buffer for ASCII conversion

section .text
    global _start

_start:
    ; Display message to enter number
    mov eax, 4
    mov ebx, 1
    mov ecx, msg1
    mov edx, len1
    int 0x80

    ; Read user input
    mov eax, 3
    mov ebx, 0
    mov ecx, num
    mov edx, 2
    int 0x80

    ; Convert ASCII input to integer
    movzx eax, byte [num]    ; Load first digit
    sub eax, '0'             ; Convert ASCII to integer

    ; Call factorial procedure
    call compute_factorial

    ; Display result message
    mov eax, 4
    mov ebx, 1
    mov ecx, result_msg
    mov edx, len_result
    int 0x80

    ; Convert and print the factorial result
    mov eax, dword [factorial]
    call int_to_ascii

    ; Exit program
    mov eax, 1
    mov ebx, 0
    int 0x80

; --------------------------------
; Procedure to compute factorial
; Input: EAX = number
; Output: factorial stored in [factorial]
; --------------------------------
compute_factorial:
    mov ecx, eax      ; ECX = number (counter)
    mov eax, 1        ; EAX = factorial result

factorial_loop:
    test ecx, ecx     ; If ECX == 0, exit loop
    jz factorial_done
    mul ecx           ; EAX *= ECX
    loop factorial_loop

factorial_done:
    mov dword [factorial], eax
    ret

; --------------------------------
; Convert integer in EAX to ASCII and print
; --------------------------------
int_to_ascii:
    mov ecx, 10
    mov edi, buffer + 9  ; Point to end of buffer
    mov byte [edi], 0    ; Null-terminate string

convert:
    dec edi
    mov edx, 0
    div ecx              ; EAX / 10, remainder in EDX
    add dl, '0'          ; Convert remainder to ASCII
    mov [edi], dl
    test eax, eax
    jnz convert

    ; Print number
    mov eax, 4
    mov ebx, 1
    mov ecx, edi
    mov edx, buffer + 10 - edi
    int 0x80
    ret